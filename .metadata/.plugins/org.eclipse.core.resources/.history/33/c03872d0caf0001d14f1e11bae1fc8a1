package com.example.contactmanagement.controller;

import java.util.List;

import javax.validation.Valid;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.contactmanagement.dto.ContactRequest;
import com.example.contactmanagement.dto.ContactResponse;
import com.example.contactmanagement.service.ContactService;

import lombok.RequiredArgsConstructor;

@RestController
@RequestMapping("/contact")
@RequiredArgsConstructor
public class ContactController {
	
	private final ContactService contactService;
	
	@GetMapping
	public ResponseEntity<List<ContactResponse>> getAllContacts()
	{
		List<ContactResponse> contacts = contactService.getAllContacts();
		return new ResponseEntity<List<ContactResponse>>(contacts, HttpStatus.OK);
	}

	@GetMapping("/{id}")
	public ResponseEntity<ContactResponse> getContactById(@PathVariable("id") Long id)
	{
		ContactResponse contact = contactService.getContactById(id);
		return new ResponseEntity<ContactResponse>(contact,HttpStatus.OK);
	}
	
	@PostMapping("/")
	public ResponseEntity<ContactResponse> addContact(@Valid @RequestBody ContactRequest request)
	{
		ContactResponse response = contactService.createContact(request);
		return new ResponseEntity<>(response, HttpStatus.CREATED);
	}
	
	@PutMapping("/{id}")
	public ResponseEntity<ContactResponse> updateContact(@PathVariable("id") Long id, @Valid @RequestBody ContactRequest request)
	{
		ContactResponse response = contactService.updateContact(id, request);
		return new ResponseEntity<ContactResponse>(response, HttpStatus.OK);
	}
	
	@DeleteMapping("/{id}")
	public ResponseEntity<String> deleteContact(@PathVariable("id") Long id)
	{
		contactService.deleteContact(id);
		return ResponseEntity<String>();
	}
}
