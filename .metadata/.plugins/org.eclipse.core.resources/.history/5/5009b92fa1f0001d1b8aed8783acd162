package com.example.contactmanagement.service;

import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Service;

import com.example.contactmanagement.dto.ContactRequest;
import com.example.contactmanagement.dto.ContactResponse;
import com.example.contactmanagement.entity.Contact;
import com.example.contactmanagement.repo.ContactRepository;

import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public class ContactServiceImpl implements ContactService{

	private final ContactRepository contactRepository;
	
	@Override
	public List<ContactResponse> getAllContacts() {
		
		List<Contact> contacts = contactRepository.findAll();
		
		return contacts.stream().map(contact -> mapToContactResponse(contact)).toList();
	}

	@Override
	public ContactResponse getContactById(Long id) {
		
		Optional<Contact> contact = contactRepository.findById(id);
		
		return null;
	}

	@Override
	public List<ContactResponse> searchContact(String searchTerm) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ContactResponse createContact(ContactRequest request) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ContactResponse updateContact(Long id, ContactRequest request) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void deleteContact(Long id) {
		// TODO Auto-generated method stub
		
	}
	
	ContactResponse mapToContactResponse(Contact contact)
	{
		return ContactResponse.builder()
				.id(contact.getId())
				.firstName(contact.getFirstName())
				.lastName(contact.getLastName())
				.email(contact.getEmail())
				.phoneNumber(contact.getPhoneNumber())
				.build();
				
		
	}

}
